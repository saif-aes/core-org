apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-dev
spec:
  selector:
    matchLabels:
      app: mysql-dev
  serviceName: mysql-dev
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql-dev
    spec:
      containers:
        - image: mysql:5.7
          name: mysql-dev
          args:
            - --ignore-db-dir=lost+found
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: password
            - name: MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: db_name
          ports:
            - containerPort: 3306
              name: mysql-dev
          resources:
              requests:
                 cpu: "1"
                 memory: "4Gi"
              limits:
                 cpu: "2"
                 memory: "8Gi"
          # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#define-a-tcp-liveness-probe
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 6
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-volumeclaim
---
## config for service
apiVersion: v1
kind: Service
metadata:
  name: mysql-dev
  labels:
    app: mysql-dev
spec:
  type: ClusterIP
  ports:
    - port: 3306
  selector:
    app: mysql-dev
---
## config pvc
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-volumeclaim
spec:
  accessModes:
    - ReadWriteOnce
  # storageClassName: pd-ssd-mysql
  storageClassName: standard
  resources:
    requests:
      storage: 55Gi
---
## config storage class GCP (SSD/HDD)
# kind: StorageClass
# apiVersion: storage.k8s.io/v1
# metadata:
#   name: pd-ssd-mysql
# provisioner: kubernetes.io/gce-pd
# parameters:
#   type: pd-ssd # use pd ssd for mysql
#   replication-type: regional-pd
#   zones: asia-southeast1-a, asia-southeast1-b # Multi A-Z HA Storage